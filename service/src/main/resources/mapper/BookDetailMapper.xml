<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.search.dao.BookDetailMapper">
  <resultMap id="BaseResultMap" type="com.search.entity.BookDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="book_chapter_id" jdbcType="INTEGER" property="bookChapterId" />
    <result column="book_chapter_name" jdbcType="VARCHAR" property="bookChapterName" />
    <result column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.search.entity.BookDetail">
    <result column="book_chapter_content" jdbcType="LONGVARCHAR" property="bookChapterContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, book_chapter_id, book_chapter_name, book_id, gmt_create, gmt_modified
  </sql>
  <sql id="Blob_Column_List">
    book_chapter_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.search.entity.BookDetailExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.search.entity.BookDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from book_detail
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book_detail
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.search.entity.BookDetailExample">
    delete from book_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.search.entity.BookDetail">
    insert into book_detail (id, book_chapter_id, book_chapter_name, 
      book_id, gmt_create, gmt_modified, 
      book_chapter_content)
    values (#{id,jdbcType=INTEGER}, #{bookChapterId,jdbcType=INTEGER}, #{bookChapterName,jdbcType=VARCHAR}, 
      #{bookId,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{bookChapterContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.search.entity.BookDetail">
    insert into book_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bookChapterId != null">
        book_chapter_id,
      </if>
      <if test="bookChapterName != null">
        book_chapter_name,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="bookChapterContent != null">
        book_chapter_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bookChapterId != null">
        #{bookChapterId,jdbcType=INTEGER},
      </if>
      <if test="bookChapterName != null">
        #{bookChapterName,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="bookChapterContent != null">
        #{bookChapterContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.search.entity.BookDetailExample" resultType="java.lang.Long">
    select count(*) from book_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bookChapterId != null">
        book_chapter_id = #{record.bookChapterId,jdbcType=INTEGER},
      </if>
      <if test="record.bookChapterName != null">
        book_chapter_name = #{record.bookChapterName,jdbcType=VARCHAR},
      </if>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.bookChapterContent != null">
        book_chapter_content = #{record.bookChapterContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update book_detail
    set id = #{record.id,jdbcType=INTEGER},
      book_chapter_id = #{record.bookChapterId,jdbcType=INTEGER},
      book_chapter_name = #{record.bookChapterName,jdbcType=VARCHAR},
      book_id = #{record.bookId,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      book_chapter_content = #{record.bookChapterContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book_detail
    set id = #{record.id,jdbcType=INTEGER},
      book_chapter_id = #{record.bookChapterId,jdbcType=INTEGER},
      book_chapter_name = #{record.bookChapterName,jdbcType=VARCHAR},
      book_id = #{record.bookId,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.search.entity.BookDetail">
    update book_detail
    <set>
      <if test="bookChapterId != null">
        book_chapter_id = #{bookChapterId,jdbcType=INTEGER},
      </if>
      <if test="bookChapterName != null">
        book_chapter_name = #{bookChapterName,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="bookChapterContent != null">
        book_chapter_content = #{bookChapterContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.search.entity.BookDetail">
    update book_detail
    set book_chapter_id = #{bookChapterId,jdbcType=INTEGER},
      book_chapter_name = #{bookChapterName,jdbcType=VARCHAR},
      book_id = #{bookId,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      book_chapter_content = #{bookChapterContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.search.entity.BookDetail">
    update book_detail
    set book_chapter_id = #{bookChapterId,jdbcType=INTEGER},
      book_chapter_name = #{bookChapterName,jdbcType=VARCHAR},
      book_id = #{bookId,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="contentQueryByContent" parameterType="com.search.entity.vo.BookQueryVo" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List"></include>,
    <include refid="Blob_Column_List"></include>
    from book_detail
    <where>
      <if test="bookName!=null">
        and  bookName = #{bookName,jdbcType=VARCHAR}
      </if>
      and book_chapter_content like "%${queryString}%"
    </where>
  </select>
</mapper>